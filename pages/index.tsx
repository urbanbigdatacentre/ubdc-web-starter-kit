import Head from 'next/head'
import {Divider, Typography, Stack} from "@mui/material";
import {useTheme} from "@mui/material";
import authRestricted from "@/components/authRestricted";
import BasePageComponents from "@/components/layouts/BasePageComponents";
import StandardContainer from "@/components/layouts/StandardContainer";
import Link from "next/link";
import parseMarkdown from "@/utils/parseMarkdown";
import fs from "fs";



interface HomeProps {
    readMeContent: string

}

const Home = (props: HomeProps) => {
    const theme  = useTheme();

    return (
        <BasePageComponents>
            <Head>
                <title>Web Starter Kit</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <StandardContainer>
                <Stack sx={{width: `100%`}}>
                    <Typography variant={'h1'} sx={{color: theme.palette.primary.main, fontFamily: `Poppins !important`}}> ðŸ‘‹ Web Starter Kit </Typography>
                    <Divider component="div" sx={{margin: theme.spacing(2), width: `100%`}}/>
                    <Link href={'/docs/getting-started'} passHref>Getting Started</Link>

                    <Typography ></Typography>
                    <div dangerouslySetInnerHTML={{ __html: props.readMeContent }} />
                </Stack>
            </StandardContainer>

        </BasePageComponents>
    )
}

export async function getStaticProps() {

        const matter = require('gray-matter');
        const fileContents = fs.readFileSync('README.md', 'utf8');
        // Use gray-matter to parse the post metadata section
        const matterResult = matter(fileContents);
        // Use remark to convert markdown into HTML string
        const readMeContent = await parseMarkdown(matterResult.content);

        return {
            props: {
                readMeContent
            },
        };

}


export default authRestricted(Home);